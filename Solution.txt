Set up and Configure a Cloud Environment in Google Cloud: Challenge Lab: SOLUTION

Task 1: Create development VPC manually

For this task because it is mentioned to develop manually.....
We will perform it manually...

Step 1: Go to Navigation Menu. Scroll down and find VPC Network.
Step 2: In VPC Network, click on Create VPC Network and then enter following data:

         Name: griffin-prod-vpc with the following subnets:
         
         Subnet : griffin-prod-wp
         Region : us-east1
         IP address ranges : 192.168.48.0/20
       Add Subnet... 
         Subnet : griffin-prod-mgmt
         Region : us-east1
         IP address ranges : 192.168.64.0/20
Step 3: Create.

******************************************************************************************************************************

Task 2: Create production VPC using Deployment Manager

gsutil cp -r gs://cloud-training/gsp321/dm .

cd dm

sed -i s/SET_REGION/us-east1/g prod-network.yaml

gcloud deployment-manager deployments create prod-network \
    --config=prod-network.yaml

cd ..

******************************************************************************************************************************

Task 3: Create bastion host

You can copy the below three commands at a time and run them on the Cloud shell...

gcloud compute instances create bastion --network-interface=network=griffin-dev-vpc,subnet=griffin-dev-mgmt  --network-interface=network=griffin-prod-vpc,subnet=griffin-prod-mgmt --tags=ssh --zone=us-east1-b

gcloud compute firewall-rules create fw-ssh-dev --source-ranges=0.0.0.0/0 --target-tags ssh --allow=tcp:22 --network=griffin-dev-vpc

gcloud compute firewall-rules create fw-ssh-prod --source-ranges=0.0.0.0/0 --target-tags ssh --allow=tcp:22 --network=griffin-prod-vpc


******************************************************************************************************************************

Task 4: Create and configure Cloud SQL Instance

gcloud sql instances create griffin-dev-db --root-password password --region=us-east1

gcloud sql connect griffin-dev-db

CREATE DATABASE wordpress;
GRANT ALL PRIVILEGES ON wordpress.* TO "wp_user"@"%" IDENTIFIED BY "stormwind_rules";
FLUSH PRIVILEGES;

******************************************************************************************************************************

Task 5: Create Kubernetes cluster

gcloud container clusters create griffin-dev \
  --network griffin-dev-vpc \
  --subnetwork griffin-dev-wp \
  --machine-type n1-standard-4 \
  --num-nodes 2  \
  --zone us-east1-b

gcloud container clusters get-credentials griffin-dev --zone us-east1-b

cd ~/

******************************************************************************************************************************

Task 6: Prepare the Kubernetes cluster, Task 7: Create a WordPress deployment, Task 8: Enable monitoring

gsutil cp -r gs://cloud-training/gsp321/wp-k8s .

cd wp-k8s

sed -i s/username_goes_here/wp_user/g wp-env.yaml

sed -i s/password_goes_here/stormwind_rules/g wp-env.yaml

----------------------------------------------------------------------------------

kubectl create -f wp-env.yaml

gcloud iam service-accounts keys create key.json --iam-account=cloud-sql-proxy@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com

kubectl create secret generic cloudsql-instance-credentials --from-file key.json

----------------------------------------------------------------------------------

I=$(gcloud sql instances describe griffin-dev-db --format="value(connectionName)")

sed -i s/YOUR_SQL_INSTANCE/$I/g wp-deployment.yaml

kubectl create -f wp-deployment.yaml

kubectl create -f wp-service.yaml

----------------------------------------------------------------------------------

For Task 7 : 
Step 1: Go to Navigation Menu, Scroll down and find Kubernetes Engine, Open that...
Step 2: In Kubernetes Engine, Open Workloads. Then click on Wordpress. and under Exposing services open that endpoints (copy on notes we required in Task 8)
Step 3: Select English and Continue...
DONE TASK 7
----------------------------------------------------------------------------------
For Task 8 :
Step 1: Go to Navigation Menu, Scroll down and find Monitoring, then open that and click on uptime checks.
Step 2: In uptime checks, CREATE UPTIME CHECK...
Step 3: Title as: wp check
        next
        In Hostname paste your endpoints(without https://)
        next
        In Path: /
        next
        next
        Test
        Create
DONE TASK 8
----------------------------------------------------------------------------------  
For Task 9:
Step 1: Go to Navigation Menu, Find IAM & Admin, open that...
Step 2: In IAM, click on ADD,
        New members as : Your Username 2 copy that and paste it here...
        In Role: Select Editor.
        Save...
DONE TASK 9...        
----------------------------------------------------------------------------------  
----------------------------------------------------------------------------------  

Thank You...
